% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/geneExpression.R
\name{DEArnaSEQ}
\alias{DEArnaSEQ}
\title{DEArnaSEQ}
\usage{
DEArnaSEQ(mat1, mat2, Cond1type, Cond2type)
}
\arguments{
\item{mat1}{numeric matrix, each row represents a gene,
each column represents a sample with Cond1type}

\item{mat2}{numeric matrix, each row represents a gene,
each column represents a sample with Cond2type}

\item{Cond1type}{a string containing the class label of the samples in mat1
(e.g., control group)}

\item{Cond2type}{a string containing the class label of the samples in mat2
(e.g., case group)}
}
\value{
table with DEGs containing for each gene logFC, logCPM, pValue,and FDR
}
\description{
DEArnaSEQ allows user to perform Differentially expression analysis (DEA),
   using edgeR package. DEA to identify differentially expressed genes (DEGs).
    It is possible to do a two-class analysis.
    DEArnaSEQ performs DEA using following functions from edgeR
    1. edgeR::DGEList converts the count matrix into an edgeR object.
    2. edgeR::estimateCommonDisp each gene gets assigned the same dispersion estimate.
    3. edgeR::exactTest performs pair-wise tests for differential expression between two groups.
    4. edgeR::topTags takes the output from exactTest(), adjusts the raw p-values using the
    False Discovery Rate (FDR) correction, and returns the top differentially expressed genes.
}
\examples{
dataNorm <- TCGAbiolinks::RnaSeqNormalization(dataBRCA, geneInfo)
dataFilt <- RnaSeqFilt(dataNorm, 0.25)
samplesNT <- MultiSampleTypes(colnames(dataFilt), typesample = c("NT"))
samplesTP <- MultiSampleTypes(colnames(dataFilt), typesample = c("TP"))
dataDEGs <- DEArnaSEQ(dataFilt[,samplesNT],
                      dataFilt[,samplesTP],"Normal", "Tumor")
}

