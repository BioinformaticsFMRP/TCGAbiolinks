\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}

<<>>=
detach("package:TCGAbiolinks", unload=TRUE)
remove.packages("TCGAbiolinks")
setwd("~/Dropbox/Dottorato/GitHub/TCGAbiolinks/R/Luc")
install.packages('TCGAbiolinks_0.5.tar.gz', type='source', repos = NULL)

library('TCGAbiolinks')
origDir <-"~/Downloads/Data"
setwd(origDir)


#Load info file
load("~/Dropbox/Dottorato/GitHub/TCGAbiolinks/R/Luc/PlatformAndAssociatedData_2015_03_11.Rdata")
sdrfFolder <- "~/Downloads/Data/TCGAsdrf/"
#Download sdrf
TCGAmanifest('BRCA')
#Query
res <- TCGAQuery('BRCA', sdrfFolder, PlatformAndAssociatedData)

toDown <- Reduce(intersect, list(res$illuminahiseq_rnaseqv2, res$genome_wide_snp_6, res$illuminaga_dnaseq))

Tumor <- 'BRCA'
downloadFolder <- "~/Downloads/Data/Samples/"
sdrfFolder <- "~/Downloads/Data/TCGAsdrf/"

#BRCArnaseqV2 <- TCGADownload(Tumor, PlatformAndAssociatedData, sdrfFolder, downloadFolder, PlatformType = 'illuminahiseq_rnaseqv2', listSample = toDown, newsample = T)
#Data_CANCER_normUQ <- RnaSeqNormalization(Data_CANCER,geneInfo)
#print(paste("STEP2..Normalization for ", CancerName, " with n. ", nrow(Data_CANCER_normUQ), " genes and ", ncol(Data_CANCER_normUQ),"samples...OK" ))

#Data_CANCER_normUQ_filt <- RnaSeqFilt(Data_CANCER_normUQ,0.25)
#print(paste("STEP3..Filter quantile for ", CancerName, " with n. ", nrow(Data_CANCER_normUQ_filt), " genes and ", ncol(Data_CANCER_normUQ_filt),"samples...OK" ))
BRCArnaseqV2 <- Cancer_rnaseqv2[, toDown]

library(genefilter)
library(clue)
library(consensus)
BRCArnaseqV2MostVar <- varFilter(BRCArnaseqV2, var.func = IQR,  var.cutoff = 0.75, filterByQuantile = TRUE)

wData <- t(BRCArnaseqV2MostVar)
ddist <- dist(wData, method = "euclidean")
sHc <- hclust(ddist, method = "ward.D")
aCalinsky <- calinsky(sHc, gMax = 20)
plot(aCalinsky, type = "l", col = "grey", main = "Calinsky & Harabasz curve")
text(1:length(aCalinsky), aCalinsky, paste(1:length(aCalinsky)))

plot(sHc, labels = F, main ="ALD cluster dendrogram all 173  samples", xlab = "Samples with relative group color",sub="")

rect.hclust(sHc, k=3, border="red")
tabCluster <- as.matrix(cutree(sHc, k = 3))
colnames(tabCluster)<-"Cluster"
tabCluster<-cbind(Sample = rownames(tabCluster),Color = rownames(tabCluster), tabCluster)
tabCluster<-as.data.frame(tabCluster)
tabCluster<-tabCluster[order(tabCluster$Cluster,decreasing=F),]
tabCluster<-as.data.frame(tabCluster)
tabCluster$Color<-as.character(tabCluster$Color)

ColorGroups<-names(table(samples_color$Color))

ccol <- palette()[1 + 1:3]

for( cc in 1:3){
  tabCluster[tabCluster[, "Cluster"] == cc, "Color"] <- ccol[cc]
}

tabCluster <- tabCluster[sHc$labels, ]

rug(which(tabCluster[sHc$order, "Color"] == "blue"), col = "blue", lwd = 3)
rug(which(tabCluster[sHc$order, "Color"] == "green3"), col = "red", lwd = 3)
rug(which(tabCluster[sHc$order, "Color"] == "red"), col = "green", lwd = 3)





groups <- as.factor(cutree(sHc, k = 3))
names(groups) <- colnames(BRCArnaseqV2MostVar)
levels(groups) <- palette()[1 + 1:3]

groups <- sort(groups)

MfiltQuantileOrdered <- BRCArnaseqV2MostVar[, names(groups)]
MfiltQuantileOrdered <- (MfiltQuantileOrdered - rowMeans(MfiltQuantileOrdered))/apply(MfiltQuantileOrdered, 1, sd)


MRactivity <- t(MfiltQuantileOrdered)
HMactivity <- t(quantileNormalization(t(MRactivity)))

summary(as.vector(HMactivity))
quantile(HMactivity, 0.15); quantile(HMactivity, 0.85)
HMactivity[HMactivity <= quantile(HMactivity, 0.15)] <- quantile(HMactivity, 0.15)
HMactivity[HMactivity >= quantile(HMactivity, 0.85)] <- quantile(HMactivity, 0.85)

#column_annotation <- matrix(" ", nrow = nrow(HMactivity), ncol = 2)
#column_annotation[, 1] <- groups
#column_annotation[, 2] <- as.character(consClust)

#row_annotation <- matrix(" ", nrow = 1, ncol = ncol(HMactivity))
#row_annotation[1, ] <- LGrColors[genesClusters]

column_annotation <- matrix(" ", nrow = nrow(HMactivity), ncol = 1)
column_annotation[, 1] <- as.character(groups)



png("tmp.png", width = 4096, height = 3200)
heatmap.3(t(HMactivity), ColSideColors = column_annotation, #RowSideColors = row_annotation,
          key = FALSE, Colv = NA, #Rowv = NA,
          scale = "row", col = greenred(75), dendrogram = "row",
          labRow = NA, labCol = NA,
          margins = c(1, 6), side.height.fraction = 0.25, keysize = 0.4, cexRow = .6)
dev.off()


BRCAcnv <- TCGADownload(Tumor, PlatformAndAssociatedData, sdrfFolder, downloadFolder, PlatformType = 'genome_wide_snp_6', listSample = toDown, newsample = F)

# Only to use after stopped first esecution with newsample = F
#BRCA_rnaseqV2_common_Methylation <- TCGADownload(Tumor='BRCA', PlatformAndAssociatedData, downloadFolder="/Users/antoniocolaprico/Desktop/package", sdrfFolder = "/Users/antoniocolaprico/Desktop/package/TCGAsdrf/", PlatformType='illuminahiseq_rnaseqv2', listSample=toDown,newsample = T)

BRCA_methylation450_version <- TCGAVersion(Tumor, PlatformType,PlatformAndAssociatedData)




@


\end{document}
