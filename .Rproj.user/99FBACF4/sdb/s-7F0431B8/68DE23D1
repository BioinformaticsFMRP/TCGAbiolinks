{
    "contents" : ".createDirectory <-\nfunction(base){\n  i=\"\";\n  while(file.exists(paste(base, i, sep=\"\"))){\n    if(i==\"\"){\n      i=1;\n    }else{\n      i=i+1;\n    }\n  }\n  toDir = paste(base, i, sep=\"\")\n  dir.create(toDir)\n  \n  toDir\n}\n.DownloadData_fromURL <-\nfunction(url, sep = \",\", header = TRUE){\n  require(httr)\n  #handle_find(url)\n  #handle_reset(url)  \n  request <- GET(url)\n  stop_for_status(request)\n  handle <- textConnection(content(request, as = 'text'))\n  on.exit(close(handle))\n  read.table(handle, sep = sep, header = header)\n}\n.DownloaDmageTAB <-\nfunction(Description,TumorDataList, keySpecies,startK, stopK, typeProtein = F ){\n  Description2 <- paste(Description, keySpecies, sep = \"\")\n  Description_i_ord <- paste(Description2, \"?C=M;O=D\", sep = \"\")\n  x <- .DownloadURL(Description_i_ord)\n  if(length(x)!=10){\n    siteNewLevel <- .FindGrepSite(x,Key=\"mage-tab\",Description2)\n    siteNewLevelSdrf <- DownloadSdrf(siteNewLevel)\n    tmp2 <-  siteNewLevelSdrf$Comment..TCGA.Barcode.\n    \n    if(typeProtein==T){\n      siteNewLevelDesign <- DownloadTypeFile(siteNewLevel,\"design\")\n      tmp2 <- siteNewLevelDesign$Sample.description\n    }\n    \n    tmp2 <- tmp2[grep(\"TCGA\",tmp2)]\n    NumberSample <- length(unique(substr(tmp2, startK, stopK)))\n    msgOUT <-  paste(Type, \" \", SpecieCurr, \" \",   CenterCurr, \" \", unique(tmp4$Platform) , \" \" ,  \" .n samples \", NumberSample, sep=\"\")\n    print(msgOUT)\n    SampleTmp <- unique(substr(tmp2, startK, stopK))\n    idx<- which(names(TumorDataList) == unique(tmp4$Platform))\n    TumorDataList[[idx]] <- SampleTmp\n  }\n  return(TumorDataList)\n}\n.DownloaDmageTAB_sdrf <-\nfunction(Description,keySpecies,KeyGrep1 = \"mage-tab\", KeyGrep2 = \"sdrf\"){\n  Description2 <- paste(Description, keySpecies, sep = \"\")\n  Description_i_ord <- paste(Description2, \"?C=M;O=D\", sep = \"\")\n  x <- .DownloadURL(Description_i_ord)\n  if(length(x)!=10){\n    siteNewLevel <- .FindGrepSite(x,Key=KeyGrep1,Description2)\n    x <- .DownloadURL(siteNewLevel)\n    x2 <- x[grep(KeyGrep2,x)]\n    \n    x2  <- as.matrix(sapply(strsplit(x2, \">\"), function(y) y[2]))\n    x2  <- as.matrix(sapply(strsplit(x2, \"<\"), function(y) y[1]))\n    site3 <- paste(siteNewLevel, x2,sep=\"\" )\n    #site4 <- paste(keySpecies,unlist(strsplit(site3,keySpecies))[2],sep=\"\")\n    site4 <- unlist(strsplit(site3,keySpecies))[2]\n    \n    print(site4)\n    return(site4)\n  } else{return(\"\")}\n  \n}\n.DownloadManifest <-\nfunction(siteNewLevel){\n  site3 <- paste(siteNewLevel, \"MANIFEST.txt\",sep=\"\")\n  x <- .DownloadURL(site3)\n  writeLines(x, \"x2.txt\" )\n  tmp2 <- read.table(\"x2.txt\", quote=\"\\\"\", stringsAsFactors = F)[,2]\n  tmp2 <- tmp2[ nchar(tmp2) > 20 ]\n  return(tmp2)\n}\n.DownloadSdrf <-\nfunction(siteNewLevel){\n  x <- .DownloadURL(siteNewLevel)\n  x2 <- x[grep(\"sdrf\",x)]\n  x2  <- as.matrix(sapply(strsplit(x2, \">\"), function(y) y[2]))\n  x2  <- as.matrix(sapply(strsplit(x2, \"<\"), function(y) y[1]))\n  site3 <- paste(siteNewLevel, x2,sep=\"\" )\n  \n  x <- .DownloadURL(site3)\n  writeLines(x, \"x2.txt\" )\n  tmp2 <- as.data.frame(read.delim(\"x2.txt\",stringsAsFactors = F))\n  return(tmp2)\n}\n.DownloadTypeFile <-\nfunction(siteNewLevel,keyDown){\n  x <- .DownloadURL(siteNewLevel)\n  x2 <- x[grep(keyDown,x)]\n  x2  <- as.matrix(sapply(strsplit(x2, \">\"), function(y) y[2]))\n  x2  <- as.matrix(sapply(strsplit(x2, \"<\"), function(y) y[1]))\n  site3 <- paste(siteNewLevel, x2,sep=\"\" )\n  \n  x <- .DownloadURL(site3)\n  writeLines(x, \"x2.txt\" )\n  tmp2 <- as.data.frame(read.delim(\"x2.txt\",stringsAsFactors = F))\n  return(tmp2)\n}\n\n.DownloadURL <-\n  function(Site){\n    # setInternet2(use = TRUE)\n    Site <- URLencode(Site)\n    x=  getURL(Site, ssl.verifypeer = FALSE)\n    \n    x <- unlist(strsplit(x,\"\\n\"))\n    \n    return(x)\n    \n  }    \n    \n.FindGrepSite <-\nfunction(x,Key,Description){\n  x2 <- x[grep(Key, x)]\n  \n  if( Key != \"sdrf\"){ x2 <- x2 [- grep(\"tar.gz\", x2)][1] }\n  \n  \n  x2  <- as.matrix(sapply(strsplit(x2, \">\"), function(y) y[2]))\n  x2  <- as.matrix(sapply(strsplit(x2, \"<\"), function(y) y[1]))\n  site2 <- paste(Description, x2,sep=\"\" )\n  return(site2)\n}\n.Random.seed <-\nc(403L, 16L, 1230691973L, 505388895L, 2058239974L, -1291062672L, \n-170568301L, 946504241L, 375120096L, -1398924930L, -360014839L, \n1508174907L, -1079954934L, -556385812L, -1765564817L, 423432613L, \n1202162012L, 1779479858L, 612830253L, 921715431L, -1126586354L, \n-1703544344L, -6022165L, 680526985L, -1744224232L, -1225171130L, \n-1736933983L, -915942349L, 1855256994L, 1905433748L, 1619516183L, \n-1612671731L, 706421796L, 1757246474L, -1384060555L, -1456230193L, \n-561208362L, -659924096L, -1363955773L, 384117089L, -701759536L, \n-2054326482L, -2046825767L, -1807898389L, -1126123174L, 974062364L, \n-1042360801L, 872975989L, 485296908L, 60253922L, 2124778429L, \n-973689801L, 2092515038L, -240215528L, -2072205957L, 1450794265L, \n-1889754712L, -237931178L, -561928751L, -265142909L, 437044242L, \n1949527972L, 780691303L, 829469885L, -282270668L, -182319206L, \n1109414885L, 1656835967L, 1034440454L, 1839958160L, 475783475L, \n-957573423L, -1747360640L, 255903070L, -38290775L, -756054693L, \n-293783702L, -194576884L, -1064470961L, 1692375813L, 1430698940L, \n-934662510L, 584035725L, -2126357049L, -2056577362L, 1009039112L, \n1295983883L, -787966999L, -589994824L, 1438454630L, -1355098111L, \n-1697642861L, -1802176190L, 1455199988L, -2068774153L, 837620461L, \n-1343017596L, 1190921130L, -273155819L, 1567142831L, 1546308534L, \n2064208352L, -161828573L, 1752737345L, -1437316816L, 898120526L, \n-358080071L, 1202256843L, -2040057734L, 1485902204L, 1316692415L, \n-1440194923L, -74799956L, 2073169538L, -1809988003L, 793569623L, \n-29232066L, 1262278776L, -115899557L, -1215758663L, 289395464L, \n-1963054666L, 428848881L, 1791975715L, -8195214L, 649476548L, \n-1477115513L, -84821155L, 1574434132L, -563562630L, 2026673861L, \n-593504225L, -647282778L, 2101985584L, -79995949L, 553091569L, \n-828897504L, -1629531714L, -1863884343L, -133048965L, 1747731274L, \n-1383562324L, 16935599L, -1349789595L, -989177828L, -1361987982L, \n139954413L, 298830119L, -1753172658L, 2081527208L, -1711132245L, \n1541753545L, 1070545624L, -719042682L, 615275105L, 187335667L, \n-1573202334L, 1799418068L, -1465484841L, 977234893L, -1542971548L, \n181930826L, -463217995L, -364991985L, -678532330L, -1948924480L, \n-460253821L, -577004639L, -1759501424L, 340672622L, 793806361L, \n1683646123L, -797238630L, 1525319260L, -683355297L, -323891915L, \n386694348L, -245234142L, 1228863613L, -2036022921L, -2090242402L, \n324590936L, 1302269115L, -772410791L, -457385496L, -1037837290L, \n-1430870127L, -1292720061L, 2099711826L, 1761817572L, 2055391783L, \n-603569539L, -625067148L, 1936545626L, -7024219L, -1814639169L, \n-1778897338L, 311000272L, -339503373L, 1046679569L, 1724388928L, \n166935070L, 670938345L, 910212635L, 1752399402L, -2038881972L, \n-58291441L, -600531387L, 832022524L, 1568898642L, 1127818189L, \n1405881735L, -972371858L, 1813286984L, 1061560907L, 1502216105L, \n1694813944L, 588466726L, -969874623L, 1935280339L, -858510206L, \n-376534348L, -730227145L, -1467431635L, -1089622460L, -889080982L, \n-1629970475L, 771098991L, -433470346L, -749804396L, 1705622658L, \n-684752960L, -1213738692L, 1915943568L, 832418850L, -1315236856L, \n-1701648244L, 1360733212L, 455884434L, 1720042624L, -141946860L, \n959192360L, 1902550586L, -644666160L, 1200972908L, -324545868L, \n1336942610L, 1700509664L, -212813876L, 56085984L, 2110694946L, \n1286865192L, -552453876L, 1787586108L, -265432846L, -791096592L, \n2029429572L, -438582696L, -99087814L, -730341648L, 94377148L, \n195950100L, -1007986494L, 1006856288L, -1870531204L, 1180890320L, \n1050844194L, 364954280L, -509868148L, 1772499388L, -732195790L, \n438744896L, 755714228L, 690387784L, 945330874L, -1004824816L, \n1845764332L, -1742277548L, -1907908846L, -367895648L, -603824180L, \n38681440L, 1925361858L, 892896808L, -1999247956L, 1937235772L, \n-1706244238L, -161850576L, 1089118756L, -1730553800L, 250332378L, \n850487696L, -935393540L, -1315262572L, 1771801410L, -1824275968L, \n626891324L, -67568048L, -1849140574L, 2107464520L, 1240105484L, \n670256348L, -658884014L, 387180672L, -528172204L, 1703623144L, \n1051437818L, -874842288L, -1759888340L, -854084236L, -461027694L, \n1682610784L, 949068428L, -1733657760L, -1622981918L, 411246760L, \n435486924L, 609421820L, -1847849038L, 866563568L, 113747396L, \n986242904L, 876530554L, 1890809264L, 1675491772L, 1497442388L, \n640617410L, -1877261536L, 1711153084L, 1177709136L, 1529011682L, \n1073983848L, 1997229388L, 1441073404L, 1334551282L, 1986057984L, \n418580084L, -1211348984L, -1153713734L, 878614480L, 1064974828L, \n2099744660L, 130216658L, 1811910240L, 169272652L, 1899861280L, \n-699223422L, -169973272L, -1180710932L, -865634756L, 263343730L, \n696075120L, 1912752420L, 300184120L, -216243814L, -1501296176L, \n-332333636L, -1233008492L, -2110514046L, 222750144L, 626172732L, \n1908929680L, 524501794L, 602344968L, -1936216820L, 1544992156L, \n-548741614L, -540963968L, -2123939052L, -1317768920L, -68096966L, \n1085418448L, -665451924L, -743310796L, 719190674L, 593534304L, \n401189196L, 1322178528L, 248911266L, -1818141272L, -2032507252L, \n-1231872580L, 24440434L, 2107399152L, 78739012L, 526440536L, \n956962874L, 27838576L, 221509692L, 2075105556L, -1247001918L, \n1774522080L, -1281652612L, 1677422288L, -1184613982L, 1943629864L, \n1390975756L, -1636068932L, 2144514866L, 1551334080L, 958252084L, \n1401624264L, -1035479878L, -35031408L, -1825009940L, -193574316L, \n-1929665902L, 1346060576L, 1465108940L, -1243004192L, -707331902L, \n528495656L, -1410631764L, 563995324L, -490116110L, -397210064L, \n798836644L, -1367331400L, -755964070L, 616214672L, 744858492L, \n606802196L, -1109399230L, 1975576832L, 737504700L, 1415792976L, \n1281624354L, -85368248L, 263858188L, -1368037796L, 1752697298L, \n-1108169216L, -1566720684L, 647498984L, -857470726L, -839876912L, \n286247724L, -1118623500L, 1515037074L, 27960672L, 1381651468L, \n-822080288L, 704426594L, -1398676312L, 1702806604L, 1532510076L, \n553335090L, 1285735024L, -626412732L, 1664859096L, -1728730246L, \n1197987888L, -1915027524L, 1787382356L, 770469954L, 430319264L, \n-656520824L, -195033295L, -1934075997L, 64241572L, 1072257618L, \n-933326425L, -1620204047L, 387281206L, 876145108L, -1631420571L, \n919826287L, 1184068008L, 912664326L, -1778597325L, -1474944875L, \n-1410170638L, -385312448L, -1768446295L, 1689100059L, 292980972L, \n1389298938L, -965784273L, 2075048249L, 1976945486L, 1870377372L, \n472886029L, -2117264009L, -126477952L, -1051377698L, 636905643L, \n-2052768851L, -62078950L, 534107864L, 72054593L, 1081649139L, \n1103882772L, 912815010L, -278172489L, 1183712897L, 44473990L, \n965142212L, 1642498037L, 1945300575L, -726464328L, 1939434902L, \n-681787485L, -2056383643L, -1874423166L, -482451472L, 1750329753L, \n-1402746997L, 1327092348L, 179855530L, -1603222817L, 1443680361L, \n2119567998L, 906728044L, 1115852477L, -1236167801L, -1296427152L, \n-1417028082L, -1166490821L, 395247645L, 1993611466L, -1048263704L, \n-1329065775L, -960312125L, -393309244L, -294045582L, 517835079L, \n1800516881L, -932425578L, 548730356L, 810338181L, 1753642703L, \n463782856L, 278688358L, -643257197L, -175774731L, 1422288338L, \n-127838688L, 1084143625L, 1442397499L, -1305562996L, -1734853350L, \n2048611215L, 519646425L, -1372388498L, 1249088252L, 2049941613L, \n1091431447L, -10375712L, 2122496446L, -1333629045L, 1926918157L, \n-202082246L, 690927736L, -51178463L, -580278573L, -1135290892L, \n987707010L, -1229876457L, 184451553L, -1229181146L, 2011265572L, \n-1128268587L, 1871096959L, -324083432L, -1917677514L, 1124026051L, \n1192438533L, -1562472798L, 1016233104L, -775648199L, 913818859L, \n-815163940L, 1371872266L, 1081932543L, -525749431L, 19024094L, \n-29903220L, -208027043L, 1832763495L, -631054960L, 793669038L, \n461322331L, -1847939011L, 352364202L, -1412021432L, 640518001L, \n2086383843L, -1700206620L, 1262403346L, -340598041L, 1686930609L, \n1685939958L, 1909829908L, 380626469L, -1194099921L, 1769827560L, \n-329921082L, 1701985395L, 838817493L, 1714810034L, -1318051712L, \n-1143075735L, 719001819L, -665940948L, 1681650746L, -1423482129L, \n-652698247L, 428462606L, -856972324L, -356053939L, 193666999L, \n-1629912768L, 1090250782L, -2130862357L, 1501777517L, -1023568166L, \n258852504L, 1386769665L, 1518949043L, 2075794900L, 1504378082L, \n1234965879L, 1517980865L, -1561169850L, -208339068L, -2106102609L\n)\n.TCGAQuery2 <-\nfunction(Tumor,siteTCGA){\n  \n  TumorData <- matrix(0, 1, 8)\n  colnames(TumorData) <- c(\"Total\", \"Exome\", \"SNP\", \"Methylation\", \"mRNA\", \"miRNA\", \"Clinical\",\"Protein\")\n  rownames(TumorData) <- Tumor\n  LevelsPlatforms <- c(\"Level_1\", \"Level_2\", \"Level_3\")\n  \n  #for ( i in 2: ncol(TumorData)){\n  \n  \n  i<-5\n  Type <-  colnames(TumorData)[i]\n  tmp <- PlatformAndAssociatedData[PlatformAndAssociatedData$Type%in% Type,]\n  \n  tmp2a <- tmp[ grep(tolower(Tumor),tmp$Tumor),]\n  \n  if( nrow(tmp2a)!=0){\n    \n    Species <- unique(tmp2a$Species)\n    \n    \n    \n    for( j in 1:length(Species)){\n      SpecieCurr <- Species[j]\n      tmp3 <- tmp2a[tmp2a$Species %in% SpecieCurr, ]\n      Centers <- unique(tmp3$Center)\n      \n      for( k in 1:length(Centers)){\n        CenterCurr <- Centers[k]\n        tmp3b <- tmp3[tmp3$Center %in% CenterCurr,]\n        \n        Platforms <- unique(tmp3b$Platform)\n        \n        for( q in 1:length(Platforms)){\n          \n          PlatformCurr <- Platforms[q]\n          tmp4 <- tmp3b[tmp3b$Platform %in% PlatformCurr, ]\n          \n          key1<- paste(unique(tmp4$CenterType), unique(tmp4$Center), unique(tmp4$Platform), sep=\"/\")\n          Description <- paste(siteTCGA, tolower(Tumor), \"/\",key1, sep=\"\")\n          \n          if( length(grep(\"agilentg4502a_07\",unique(tmp4$Platform))) > 0   || unique(tmp4$Platform) ==  \"ht_hg-u133a\" || unique(tmp4$Platform) ==  \"hg-u133_plus_2\" || unique(tmp4$Platform) ==  \"illuminaga_mrna_dge\" ){\n            Description <- paste(Description, \"/transcriptome/\", sep = \"\")\n            Description_i_ord <- paste(Description, \"?C=M;O=D\", sep = \"\")\n            x <- DownloadURL(Description_i_ord)\n            \n            \n            \n            for( w in 1:length(LevelsPlatforms)){\n              \n              siteNewLevel <- .FindGrepSite(x,Key=LevelsPlatforms[w],Description)\n              tmp2 <- DownloadManifest(siteNewLevel)\n              \n              \n              if(length(grep(\"agilentg4502a_07\",unique(tmp4$Platform))) > 0){\n                NumberSample <- length(unique(substr(tmp2, 1, 23)))\n              }\n              \n              if(unique(tmp4$Platform) ==  \"ht_hg-u133a\"){\n                NumberSample <- length(unique(substr(tmp2, 44, 58)))\n              }\n              \n              if(unique(tmp4$Platform) ==  \"hg-u133_plus_2\" || unique(tmp4$Platform) ==  \"illuminaga_mrna_dge\"){\n                NumberSample <- length(unique(substr(tmp2, 1, 16)))\n              }\n              \n              message <- paste(Type, \" \", SpecieCurr, \" \",   CenterCurr, \" \", unique(tmp4$Platform) , \" \" ,LevelsPlatforms[w] ,  \" .n samples \", NumberSample, sep=\"\")\n              print(message)\n              \n            } #end for LevelsPlatform\n          } #end platform Exp-Gene\n          \n          \n          if(unique(tmp4$Platform) ==  \"huex-1_0-st-v2\"){\n            Description <- paste(Description, \"/exon/\", sep = \"\")\n            Description_i_ord <- paste(Description, \"?C=M;O=D\", sep = \"\")\n            x <- DownloadURL(Description_i_ord)\n            siteNewLevel <- .FindGrepSite(x,Key=\"mage-tab\",Description)\n            siteNewLevelSdrf <- DownloadSdrf(siteNewLevel)\n            tmp2 <-  siteNewLevelSdrf$Comment..TCGA.Barcode.\n            tmp2 <- tmp2[grep(\"TCGA\",tmp2)]\n            NumberSample <- length(unique(substr(tmp2, 1, 16)))\n            message <- paste(Type, \" \", SpecieCurr, \" \",   CenterCurr, \" \", unique(tmp4$Platform) , \" \" , \" .n samples \", NumberSample, sep=\"\")\n            print(message)\n          }\n          \n          \n          \n          if(unique(tmp4$Platform) ==  \"illuminahiseq_rnaseq\" || unique(tmp4$Platform) ==  \"illuminaga_rnaseq\"){\n            Description <- paste(Description, \"/rnaseq/\", sep = \"\")\n            Description_i_ord <- paste(Description, \"?C=M;O=D\", sep = \"\")\n            x <- DownloadURL(Description_i_ord)\n            siteNewLevel <- .FindGrepSite(x,Key=LevelsPlatforms[3],Description)\n            tmp2 <- DownloadManifest(siteNewLevel)\n            NumberSample <- length(unique(substr(tmp2, 13, 29)))\n            message <- paste(Type, \" \", SpecieCurr, \" \",   CenterCurr, \" \", unique(tmp4$Platform) , \" \" ,LevelsPlatforms[3] ,  \" .n samples \", NumberSample, sep=\"\")\n            print(message)\n          }\n          \n          \n          \n          if(unique(tmp4$Platform) ==  \"illuminahiseq_rnaseqv2\" || unique(tmp4$Platform) ==  \"illuminaga_rnaseqv2\" ){\n            Description <- paste(Description, \"/rnaseqv2/\", sep = \"\")\n            Description_i_ord <- paste(Description, \"?C=M;O=D\", sep = \"\")\n            x <- DownloadURL(Description_i_ord)\n            siteNewLevel <- .FindGrepSite(x,Key=LevelsPlatforms[3],Description)\n            tmp2 <- DownloadManifest(siteNewLevel)\n            \n            NumberSample <- length(unique(substr(tmp2, 13, 29)))\n            message <- paste(Type, \" \", SpecieCurr, \" \",   CenterCurr, \" \", unique(tmp4$Platform) , \" \" ,LevelsPlatforms[3] ,  \" .n samples \", NumberSample, sep=\"\")\n            print(message)\n          }\n          \n          \n          if(unique(tmp4$Platform) ==  \"illuminahiseq_totalrnaseqv2\"){\n            Description <- paste(Description, \"/totalrnaseqv2/\", sep = \"\")\n            Description_i_ord <- paste(Description, \"?C=M;O=D\", sep = \"\")\n            x <- DownloadURL(Description_i_ord)\n            siteNewLevel <- .FindGrepSite(x,Key=LevelsPlatforms[3],Description)\n            tmp2 <- DownloadManifest(siteNewLevel)\n            \n            NumberSample <- length(unique(substr(tmp2, 9, 44)))\n            message <- paste(Type, \" \", SpecieCurr, \" \",   CenterCurr, \" \", unique(tmp4$Platform) , \" \" ,LevelsPlatforms[3] ,  \" .n samples \", NumberSample, sep=\"\")\n            print(message)\n          }\n          \n          \n          \n        } # end platform\n      } #end for Centers\n    } # end for species\n    \n    \n    \n    #}\n  }\n  \n}\n",
    "created" : 1431527468747.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "667354451",
    "id" : "68DE23D1",
    "lastKnownWriteTime" : 1431346990,
    "path" : "~/Desktop/gitHubTCGA/TCGAbiolinks/R/TCGAbiolinks-internal.R",
    "project_path" : "R/TCGAbiolinks-internal.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}