{
    "contents" : "TCGADownload <-\nfunction(Tumor, PlatformAndAssociatedData, sdrfFolder = \"\", downloadFolder = \"\",PlatformType,nsample=0, listSample=0, newsample =FALSE){\n  require(RCurl)\n  FolderWd <- getwd()\n  setwd(downloadFolder)\n  .createDirectory(PlatformType)\n  downloadFolder<-paste(downloadFolder,PlatformType,sep=\"/\")\n \n  siteTCGA <- \"https://tcga-data.nci.nih.gov/tcgafiles/ftp_auth/distro_ftpusers/anonymous/tumor/\"\n  tmp <- PlatformAndAssociatedData[toupper(PlatformAndAssociatedData$Tumor) == toupper(Tumor)\n                                   & toupper(PlatformAndAssociatedData$Platform) == toupper(PlatformType), ]\n  \n  key1a <- paste(unique(tmp$CenterType), unique(tmp$Center), unique(tmp$Platform), sep=\"/\")\n  Description <- paste(siteTCGA, tolower(tmp$Tumor), \"/\",key1a, sep=\"\")\n  key2a <- paste(\"/\",tmp$Folder,\"/\",sep=\"\")\n  \n  if(PlatformType == \"illuminaga_dnaseq\"){\n    toDdl <- .DownloaDmageTAB_sdrf(Description, keySpecies = key2a, KeyGrep1 = \"Level_2\", KeyGrep2 = \"somatic.maf\")\n    toDdl <- paste(Description, key2a, toDdl, sep = \"\")\n    \n    x <- .DownloadURL(toDdl)\n    x <- strsplit(x, \"\\t\")\n    x <- x[-1]\n    x <- matrix(unlist(x), nrow = length(x), byrow = T)\n    colnames(x) <- x[1, ]\n    x <- x[-1, ]\n    \n    return(x)\n  }\n  \n  \n  lstFileSdrf <- list.files(file.path(sdrfFolder))\n  lstFileSdrf_plt <- lstFileSdrf[grep(tolower(PlatformType), tolower(lstFileSdrf))]\n  listSample_fromSdrf <- read.delim(paste( sdrfFolder,  lstFileSdrf_plt,sep=\"\"))\n  \n  \n  toDdl <- .DownloaDmageTAB_sdrf(Description, keySpecies = key2a, KeyGrep1 = \"Level_3\", KeyGrep2 = \"MANIFEST.txt\") \n  toDdl <- paste(Description, key2a, toDdl, sep = \"\")\n  \n  x <- .DownloadURL(toDdl)\n  x <- sapply(strsplit(x, \"  \"), function(y) y[2])\n  \n  if(PlatformType == \"illuminahiseq_rnaseq\"){  x <- x[grep(\"gene.quantification\", x)] }\n  if(PlatformType == \"agilentg4502a_07_3\"){    x <- x[grep(\"tcga_level3\", x)]}\n  if(PlatformType == \"illuminahiseq_rnaseqv2\"){ x <- x[grep(\"rsem.genes.results\", x)] }\n  if(PlatformType == \"humanmethylation27\"){ x <- x[grep(\"HumanMethylation27\", x)] }\n  if(PlatformType == \"humanmethylation450\"){ x <- x[grep(\"HumanMethylation450\", x)] }\n  if(PlatformType == \"illuminaga_mirnaseq\"){ x <- x[grep(\"mirna.quantification\", x)] }\n  if(PlatformType == \"illuminahiseq_mirnaseq\"){ x <- x[grep(\"mirna.quantification\", x)] }\n  \n  \n  if(PlatformType == \"genome_wide_snp_6\"){ x <- x[grep(\"hg19.seg\", x)]\n                                           x <- x[-grep(\"nocnv\", x)]}\n  \n  if(PlatformType == \"mda_rppa_core\"){  x <- x[grep(\"protein_expression\", x)] }\n  \n  \n  \n  if(length(listSample)!=0){\n  if(PlatformType == \"illuminahiseq_rnaseqv2\"){\n    xSplit <- gsub(\".rsem.genes.results\", \"\", sapply(strsplit(x, \"unc.edu\"), function(x) x[2]))\n    xSplit2 <- substr(xSplit, 2,37)\n    xuuid <- as.data.frame(cbind( list = as.character(x), uuid = as.character(xSplit2), barcode = as.character(xSplit2)))\n    xuuid$list <- as.character(xuuid$list)\n    xuuid$uuid <- as.character(xuuid$uuid)\n    xuuid$barcode <- as.character(xuuid$barcode)\n    print(paste(\"Finding uuid for \", length(listSample), \" samples with TCGA barcode selected\",sep=\"\"))\n    for( g in 1 : nrow(xuuid) ){\n      \n      tmpsdrf <-  listSample_fromSdrf[ as.character(listSample_fromSdrf$Extract.Name) ==  as.character(xuuid$uuid[g]),]\n      tmpbarcode <- as.character(tmpsdrf$Comment..TCGA.Barcode.)[1]\n      if(length(tmpbarcode) == 0 ) next\n    xuuid$barcode[g] <- as.character(tmpsdrf$Comment..TCGA.Barcode.)[1]\n  }\n  xuuid_complete <- xuuid[!(is.na(xuuid$barcode)),]\n  xuuid_complete_todown <- xuuid_complete[substr(xuuid_complete$barcode,1,nchar(listSample[1])) %in% listSample,]\n   x <- x [x %in% xuuid_complete_todown$list]\n  }\n  }\n   \n  plt <- PlatformAndAssociatedData\n  plt2 <- plt[toupper(plt$Tumor) == toupper(Tumor) & plt$Platform == PlatformType,]\n  \n  version <- gsub(Description,\"\",toDdl)\n  version <- gsub(key2a,\"\",version)\n  version <- gsub(\"MANIFEST.txt\",\"\",version)\n  \n  print(paste(\"Found \", length(x), \" samples of \",Tumor, \"version: \", version, \"...\" ))\n   \n print(downloadFolder)\n setwd(downloadFolder)\n  \n \n if (newsample == TRUE){\n   lstDownAlready <-  list.files(downloadFolder)\n   print(paste(\"Found \", length(lstDownAlready), \" samples downloaded\"),sep=\"\")\n   sampleNew <- setdiff(x,lstDownAlready) \n   print(paste(\"Found \", length(sampleNew), \" new samples to download\"),sep=\"\")\n   x <- sampleNew\n }\n \n samplesList <- paste(gsub(\"MANIFEST.txt\", \"\", toDdl), x, sep = \"\")\n if (nsample!=0){\n   samplesList <- samplesList[1:nsample]\n }\n \n \n \n \nfor(i in 1:length(samplesList)){\n  tmp2 <- .DownloadData_fromURL(url =samplesList[i] ,sep=\"\", header = T)\n  #filename <- paste(downloadFolder, x[i], sep = \"\")\n  filename <- x[i]\n  write.csv(tmp2, filename)\n  print(paste(x[i], \" ... sample n. \", i, \" of \", length(samplesList), sep = \"\"))\n}\n\n  \n  lf <- list.files(downloadFolder)\n  lf1<-lf\n  lf <- paste(downloadFolder, lf, sep = \"/\")\n  \n  tmpData <- read.csv(lf[1], sep = \",\", stringsAsFactors = FALSE)\n  geData <- matrix(0, nrow = nrow(tmpData), ncol = length(lf))\n  tmpData <- tmpData[,-1]\n  \n  if(PlatformType == \"agilentg4502a_07_3\"){\n    tmpData <- tmpData[-1, ]\n    geData <- matrix(0, nrow = nrow(tmpData), ncol = length(lf))\n    rownames(geData) <- tmpData$Hybridization.REF\n    colNames <- rep(\"\", length(lf))\n    for(i in 1:length(lf)){\n     tmpData <- read.csv(lf[i], stringsAsFactors = FALSE, sep = \",\")\n     tmpData <- tmpData[,-1]\n      colNames[i] <- colnames(tmpData)[2]\n      tmpData <- tmpData[-1, 2]\n      tmpData[which(tmpData == \"null\")] <- NA\n      geData[, i] <- as.numeric(tmpData)\n      print(i)\n    }\n    colnames(geData) <- substr(gsub(\"\\\\.\", \"-\", colNames),1,16)\n  }\n  \n  if(PlatformType == \"illuminahiseq_rnaseq\"){\n    rownames(geData) <- tmpData$gene\n    colnames(geData) <- substr(paste(\"TCGA\", sapply(strsplit(lf, \"TCGA\"), function(y) y[2]), sep = \"\"), 1, 28)\n    for(i in 1:length(lf)){\n     tmpData <- read.csv(lf[i], stringsAsFactors = FALSE, sep = \",\")\n     tmpData <- tmpData[,-1]\n      expr <- tmpData$raw_counts\n      geData[, i] <- expr\n      print(i)\n    }\n  }\n  \n  if(PlatformType == \"illuminahiseq_rnaseqv2\"){\n    rownames(geData) <- tmpData$gene_id\n    path2 <- paste(Description, key2a,plt2$FileName,sep=\"\")\n    xpath <- .DownloadURL(path2)\n    nc<-length(unlist(strsplit(xpath[1], \"\\t\")))\n    xmat <- matrix( unlist(strsplit(xpath, \"\\t\") ), ncol=nc,byrow=T)\n    colnames(xmat)<-gsub(\" \",\"_\",xmat[1,])\n    \n    xmat<-xmat[-1,]\n    xmat <- as.data.frame(xmat,stringsAsFactors=F)\n    xmat2 <- xmat[grep(\"rsem.genes.results\",xmat$Derived_Data_File),]\n    xmat2 <- xmat[sapply(lf1,function(y) grep(y, xmat$Derived_Data_File)),]\n    \n    colnames(geData)<-xmat2$'Comment_[TCGA_Barcode]'\n    \n    for(i in 1:length(lf)){\n     tmpData <- read.csv(lf[i], stringsAsFactors = FALSE, sep = \",\")\n      expr <- tmpData$raw_count \n      geData[, i] <- expr\n      print(i)\n    }\n  }\n  \n  \n  \n  if(PlatformType == \"humanmethylation27\" || PlatformType == \"humanmethylation450\" ){\n    tmpData <- tmpData[-1, ]\n    geData <- matrix(0, nrow = nrow(tmpData), ncol = length(lf))\n    rownames(geData) <- tmpData$Hybridization.REF\n    colNames <- rep(\"\", length(lf))\n    for(i in 1:length(lf)){\n     tmpData <- read.csv(lf[i], stringsAsFactors = FALSE, sep = \",\")\n      colNames[i] <- colnames(tmpData)[2]\n      tmpData <- tmpData[-1, 2]\n      tmpData[which(tmpData == \"null\")] <- NA\n      geData[, i] <- as.numeric(tmpData)\n      print(i)\n    }\n    colnames(geData) <- substr(gsub(\"\\\\.\", \"-\", colNames),1,28)\n  }\n  \n  \n  \n  if(PlatformType == \"illuminaga_mirnaseq\" || PlatformType == \"illuminahiseq_mirnaseq\"){\n    rownames(geData) <- tmpData$miRNA_ID\n    colnames(geData) <- substr(paste(\"TCGA\", sapply(strsplit(lf, \"TCGA\"), function(y) y[2]), sep = \"\"), 1, 28)\n    for(i in 1:length(lf)){\n     tmpData <- read.csv(lf[i], stringsAsFactors = FALSE, sep = \",\")\n      expr <- tmpData$read_count\n      geData[, i] <- expr\n      print(i)\n    }\n  }\n  \n  if(PlatformType == \"mda_rppa_core\"){\n    tmpData <- tmpData[-1, ]\n    geData <- matrix(0, nrow = nrow(tmpData), ncol = length(lf))\n    rownames(geData) <- tmpData$Sample.REF\n    for(i in 1:length(lf)){\n     tmpData <- read.csv(lf[i], stringsAsFactors = FALSE, sep = \",\")\n      tmpData <- tmpData[-1, 2]\n      tmpData[which(tmpData == \"null\")] <- NA\n      geData[, i] <- as.numeric(tmpData)\n      print(i)\n    }\n    colNames <- gsub(\".txt\", \"\", sapply(strsplit(lf1, \"Level_3.\"), function(x) x[2]))\n    \n    toDdl <- .DownloaDmageTAB_sdrf(Description, key2a, KeyGrep1 = \"mage-tab\", KeyGrep2 = \"array_design.txt\")\n    toDdl <- paste(Description, key2a, toDdl, sep = \"\")\n    x <- .DownloadURL(toDdl)\n    x <- strsplit(x, \"\\t\")\n    x <- matrix(unlist(x), nrow = length(x), byrow = T)\n    x <- gsub(\"\\r\", \"\", x)\n    colnames(x) <- x[1, ]\n    x <- x[-1, ]\n    rownames(x) <- x[, \"UUID\"]\n    \n    colnames(geData) <- x[colNames, \"Sample.barcode\"]\n  }\n  \n  \n  if(PlatformType == \"genome_wide_snp_6\"){\n    \n    path2 <- paste(Description, key2a,plt2$FileName,sep=\"\")\n    xpath <- .DownloadURL(path2)\n    nc<-length(unlist(strsplit(xpath[1], \"\\t\")))\n    xmat <- matrix( unlist(strsplit(xpath, \"\\t\") ), ncol=nc,byrow=T)\n    colnames(xmat)<-gsub(\" \",\"_\",xmat[1,])\n    \n    xmat<-xmat[-1,]\n    xmat <- as.data.frame(xmat,stringsAsFactors=F)\n    lf2<-gsub(\"hg19\",\"hg18\",lf1)\n    lf3 <- intersect(lf2, xmat$Derived_Array_Data_File)\n    \n    xmat2 <- xmat[sapply(lf3,function(y) grep(y, xmat$Derived_Array_Data_File)),]\n    #grep(lf2[5], xmat$Derived_Array_Data_File)\n    \n    geData <- matrix(0, nrow = nrow(tmpData), ncol = length(lf3))\n    colnames(geData)<-xmat2$'Comment_[TCGA_Barcode]'\n    \n    # rownames(geData) <- tmpData$gene\n    # colnames(geData) <- substr(paste(\"TCGA\", sapply(strsplit(lf, \"TCGA\"), function(y) y[2]), sep = \"\"), 1, 16)\n    for(i in 1:length(lf)){\n     tmpData <- read.delim(lf[i], stringsAsFactors = FALSE, sep = \",\")\n      expr <- tmpData$Segment_Mean\n      geData[, i] <- expr\n      print(i)\n    }\n  }\n  \n  \n  setwd(FolderWd)\n  return(geData)\n  \n}\n",
    "created" : 1429718615374.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3322368750",
    "id" : "ACFA518D",
    "lastKnownWriteTime" : 1428056469,
    "path" : "~/Desktop/gitTCGAbiolinks_OLD2/TCGAbiolinks/R/Luc/TCGAbiolinks/R/TCGADownload.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}