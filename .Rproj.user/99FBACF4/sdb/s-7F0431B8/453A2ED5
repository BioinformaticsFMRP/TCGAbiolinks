{
    "contents" : "#' @title TCGA Version\n#'\n#' @description  TCGA Version\n#'\n#' @param Tumor  a character string indicating the cancer type for \n#'        which to download data. Options include ACC, BLCA, BRCA, \n#'        CESC, COAD, DLBC, ESCA, GBM, HNSC, KICH, KIRC, KIRP, LAML, \n#'        LGG, LIHC, LUAD, LUSC, OV, PAAD, PRAD, READ, SARC, SKCM, STAD, \n#'        THCA, UCEC, UCS. Look at https://tcga-data.nci.nih.gov/tcga/ \n#'        for Available Cancer Types. \n#' @param PlatformType \"illuminahiseq_rnaseq\"\n#' @param PlatformAndAssociatedData data frame 615 observations of 12 variables,\n#'        indicating the different characteristics of the data\n#'        e.g. tumour, type, species.  \n#' @import RCurl httr bitops\n#' @export\n\n\n\nTCGAVersion <- function(Tumor, PlatformType,PlatformAndAssociatedData){\n  \n  require(RCurl)\n  #downloadFolder<-paste(downloadFolder,PlatformType,\"/\",sep=\"\")\n  #.createDirectory(PlatformType)\n  siteTCGA <- \"https://tcga-data.nci.nih.gov/tcgafiles/ftp_auth/distro_ftpusers/anonymous/tumor/\"\n  tmp <- PlatformAndAssociatedData[toupper(PlatformAndAssociatedData$Tumor) == toupper(Tumor)\n                                   & toupper(PlatformAndAssociatedData$Platform) == toupper(PlatformType), ]\n  \n  key1a <- paste(unique(tmp$CenterType), unique(tmp$Center), unique(tmp$Platform), sep=\"/\")\n  Description <- paste(siteTCGA, tolower(tmp$Tumor), \"/\",key1a, sep=\"\")\n  key2a <- paste(\"/\",tmp$Folder,\"/\",sep=\"\")\n  \n  #toDdl <- .DownloaDmageTAB_sdrf(Description, keySpecies = key2a, KeyGrep1 = \"Level_3\", KeyGrep2 = \"MANIFEST.txt\")\n  #toDdl <- paste(Description, key2a, toDdl, sep = \"\")\n  #x <- .DownloadURL(toDdl)\n  #x <- sapply(strsplit(x, \"  \"), function(y) y[2])\n  \n  toDdl <- paste(Description, key2a, sep = \"\")\n  x <- .DownloadURL(toDdl)\n  xver <- x[grep(\"Level_3\",x)]\n  xver <- as.matrix(xver[-grep(\"tar.gz\",xver)])\n  xverMat <- as.data.frame(matrix(0,nrow(xver),2))\n  colnames(xverMat)<-c(\"Version\",\"Date\")\n  \n  for( i in 1: nrow(xverMat)){\n    xtmp1 <- xver[i]\n    xver2 <- as.matrix(unlist(strsplit(xtmp1, \"  \")))\n    timeVer <- xver2[grep(\":\",xver2)]\n    Vers <- xver2[grep(\"Level_3\",xver2)]\n    Vers  <- as.matrix(sapply(strsplit(Vers, \">\"), function(y) y[2]))\n    Vers  <- as.matrix(sapply(strsplit(Vers, \"<\"), function(y) y[1]))\n    xverMat$Version[i]<- Vers\n    xverMat$Date[i]<-timeVer\n  }\n  \n  \n  xverMat <- cbind(xverMat, Samples = matrix(0, nrow(xverMat),1), SizeMbyte = matrix(0, nrow(xverMat),1))\n  print(paste(\"Found \", nrow(xverMat), \" Version of \", PlatformType,sep=\"\"))\n  \n  for( i in 1: nrow(xverMat)){\n    \n    todown1<- paste(Description,key2a,xverMat$Version[i],sep=\"\")\n    print(paste(\"Version \", i , \" of \", nrow(xverMat), \" \", xverMat$Version[i], \" ...done\",sep=\"\"))\n    x <- .DownloadURL(todown1)\n    \n    if(PlatformType == \"illuminahiseq_rnaseq\"){  x <- x[grep(\"gene.quantification\", x)] }\n    if(PlatformType == \"agilentg4502a_07_3\"){    x <- x[grep(\"tcga_level3\", x)]}\n    if(PlatformType == \"illuminahiseq_rnaseqv2\"){ x <- x[grep(\"rsem.genes.results\", x)] }\n    if(PlatformType == \"humanmethylation27\"){ x <- x[grep(\"HumanMethylation27\", x)] }\n    if(PlatformType == \"humanmethylation450\"){ x <- x[grep(\"HumanMethylation450\", x)] }\n    if(PlatformType == \"illuminaga_mirnaseq\"){ x <- x[grep(\"mirna.quantification\", x)] }\n    if(PlatformType == \"genome_wide_snp_6\"){ x <- x[grep(\"hg19.seg\", x)]}\n    \n    x2<- sapply(strsplit(x, \":\"), function(y) y[2])\n    x3<- sapply(strsplit(x2, \" \"), function(y) y[3])\n    sizeK <- x3[grep(\"K\",x3)]\n    sizeM <- x3[grep(\"M\",x3)]\n    sizeK_1 <- as.numeric(gsub(\"K\",\"\",sizeK))\n    sizeM_1 <- as.numeric(gsub(\"M\",\"\",sizeM))\n    sizeK_2<- round(sum(sizeK_1)/1000)\n    sizeM_2<- sum(sizeM_1)\n    sizeTot<- sizeK_2+sizeM_2\n    xverMat$SizeMbyte[i]<-sizeTot\n    xverMat$Samples[i]<-length(x3)\n    \n  }\n  return(xverMat)\n}\n",
    "created" : 1429715505947.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2432350968",
    "id" : "453A2ED5",
    "lastKnownWriteTime" : 1426094241,
    "path" : "~/Desktop/gitTCGAbiolinksOLD/gitTCGAbiolinks/TCGAbiolinks/R/TCGAVersion.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}